{"version":3,"sources":["app.js"],"names":["ajax","XMLHttpRequest","content","document","createElement","NEWS_URL","CONTENT_URL","open","send","newsFeed","JSON","parse","response","ul","window","addEventListener","id","location","hash","substring","replace","newsContent","title","innerHTML","appendChild","console","log","i","length","li","a","href","comments_count","getElementById"],"mappings":"AAAA,IAAIA,IAAI,GAAG,IAAIC,cAAJ,EAAX,EAAgC;;AAChC,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAE,wCAAnB;AAEAN,IAAI,CAACO,IAAL,CAAU,KAAV,EAAiBF,QAAjB,EAA2B,KAA3B,GAAmC;;AACnCL,IAAI,CAACQ,IAAL,IAAY;;AAEZ,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACY,QAAhB,CAAjB,EAA4C;;AAC5C,IAAMC,EAAE,GAAGV,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AAEAU,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAqC,YAAU;AAC7C,MAAMC,EAAE,GAAGC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwB,CAAxB,CAAX;AAEAnB,EAAAA,IAAI,CAACO,IAAL,CAAU,KAAV,EAAiBD,WAAW,CAACc,OAAZ,CAAoB,KAApB,EAA0BJ,EAA1B,CAAjB,EAAgD,KAAhD;AACAhB,EAAAA,IAAI,CAACQ,IAAL;AAEA,MAAMa,WAAW,GAAGX,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACY,QAAhB,CAApB;AACA,MAAMU,KAAK,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAd;AAEAkB,EAAAA,KAAK,CAACC,SAAN,GAAkBF,WAAW,CAACC,KAA9B;AACApB,EAAAA,OAAO,CAACsB,WAAR,CAAoBF,KAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAED,CAbD;;AAeA,KAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAClB,QAAQ,CAACmB,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAClC,MAAME,EAAE,GAAG1B,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAM0B,CAAC,GAAG3B,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AAEA0B,EAAAA,CAAC,CAACC,IAAF,cAAWtB,QAAQ,CAACkB,CAAD,CAAR,CAAYX,EAAvB;AACAc,EAAAA,CAAC,CAACP,SAAF,aAAiBd,QAAQ,CAACkB,CAAD,CAAR,CAAYL,KAA7B,cAAsCb,QAAQ,CAACkB,CAAD,CAAR,CAAYK,cAAlD;AAEAH,EAAAA,EAAE,CAACL,WAAH,CAAeM,CAAf;AACAjB,EAAAA,EAAE,CAACW,WAAH,CAAeK,EAAf,EARkC,CAUlC;AACD;;AAED1B,QAAQ,CAAC8B,cAAT,CAAwB,MAAxB,EAAgCT,WAAhC,CAA4CX,EAA5C;AACAV,QAAQ,CAAC8B,cAAT,CAAwB,MAAxB,EAAgCT,WAAhC,CAA4CtB,OAA5C","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["let ajax = new XMLHttpRequest();//XMLHttpRequest을 실행시켜 리턴값을 ajax변수(ajax객체의 참조변수를 저장)에 저장\nconst content = document.createElement(\"div\");\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\nconst CONTENT_URL ='https://api.hnpwa.com/v0/item/@id.json';\n\najax.open('GET', NEWS_URL, false); //요청을 초기화하는 ajax객체의 메서드. 비동기 처리할대는 false넣으면 안됌\najax.send();//데이터 가져오는 ajax객체의 메서드//요청을 보냅니다. 요청이 비동기인 경우(기본값), 이 메소드는 요청이 보내진 즉시 반환합니다.\n\nconst newsFeed = JSON.parse(ajax.response); //데이터가 들어온곳 ajax.response를 parse를써서 객체로 변환\nconst ul = document.createElement(\"ul\");\n\nwindow.addEventListener(\"hashchange\",function(){\n  const id = location.hash.substring(1);\n\n  ajax.open('GET', CONTENT_URL.replace('@id',id), false);\n  ajax.send();\n\n  const newsContent = JSON.parse(ajax.response);\n  const title = document.createElement(\"h1\");\n\n  title.innerHTML = newsContent.title;\n  content.appendChild(title);\n  console.log(newsContent);\n\n});\n\nfor(let i=0; i<newsFeed.length; i++){\n  const li = document.createElement(\"li\");\n  const a = document.createElement(\"a\");\n\n  a.href=`#${newsFeed[i].id}`;\n  a.innerHTML = `${newsFeed[i].title}(${newsFeed[i].comments_count})`;\n\n  li.appendChild(a);\n  ul.appendChild(li);\n  \n  //root.appendChild(\"li\")//뭐야이게?? 왜이런코드를 쓴거냐 생각을 하고 코딩을하자,,, 엘리먼트를 만들고 append하는 순서도 중요.\n}\n\ndocument.getElementById('root').appendChild(ul);\ndocument.getElementById('root').appendChild(content);\n"]}